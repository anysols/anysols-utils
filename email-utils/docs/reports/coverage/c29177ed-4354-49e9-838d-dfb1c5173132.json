{
  "scriptId": "81",
  "url": "https://deno.land/std@0.107.0/testing/asserts.ts",
  "functions": [
    {
      "functionName": "",
      "ranges": [{ "startOffset": 0, "endOffset": 16205, "count": 1 }],
      "isBlockCoverage": true
    },
    {
      "functionName": "<instance_members_initializer>",
      "ranges": [{ "startOffset": 397, "endOffset": 520, "count": 0 }],
      "isBlockCoverage": true
    },
    {
      "functionName": "_format",
      "ranges": [{ "startOffset": 675, "endOffset": 1026, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "createColor",
      "ranges": [{ "startOffset": 1135, "endOffset": 1471, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "createSign",
      "ranges": [{ "startOffset": 1578, "endOffset": 1797, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "buildMessage",
      "ranges": [{ "startOffset": 1798, "endOffset": 2605, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "isKeyedCollection",
      "ranges": [{ "startOffset": 2606, "endOffset": 2718, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "equal",
      "ranges": [{ "startOffset": 2833, "endOffset": 6050, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "constructorsEqual",
      "ranges": [{ "startOffset": 6081, "endOffset": 6253, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assert",
      "ranges": [{ "startOffset": 6346, "endOffset": 6443, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertEquals",
      "ranges": [{ "startOffset": 6451, "endOffset": 7201, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertNotEquals",
      "ranges": [{ "startOffset": 7209, "endOffset": 7722, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertStrictEquals",
      "ranges": [{ "startOffset": 7730, "endOffset": 8859, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertNotStrictEquals",
      "ranges": [{ "startOffset": 8867, "endOffset": 9083, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertExists",
      "ranges": [{ "startOffset": 9180, "endOffset": 9422, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertStringIncludes",
      "ranges": [{ "startOffset": 9512, "endOffset": 9757, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertArrayIncludes",
      "ranges": [{ "startOffset": 9765, "endOffset": 10399, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertMatch",
      "ranges": [{ "startOffset": 10497, "endOffset": 10727, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertNotMatch",
      "ranges": [{ "startOffset": 10831, "endOffset": 11067, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertObjectMatch",
      "ranges": [{ "startOffset": 11190, "endOffset": 12952, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "fail",
      "ranges": [{ "startOffset": 13008, "endOffset": 13094, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertThrows",
      "ranges": [{ "startOffset": 13292, "endOffset": 14335, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertRejects",
      "ranges": [{ "startOffset": 14566, "endOffset": 15634, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "unimplemented",
      "ranges": [{ "startOffset": 15996, "endOffset": 16081, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "unreachable",
      "ranges": [{ "startOffset": 16133, "endOffset": 16204, "count": 0 }],
      "isBlockCoverage": false
    }
  ]
}
